;; -*- mode: emacs-lisp; lexical-binding:t; coding: utf-8-emacs; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Wed Dec  1 08:01:39 2021
;; Desktop file format version 208
;; Emacs version 27.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (24999 11235 616450 444000) (desktop . "208") "darchitect@armitage" nil nil ((((minibuffer . t) (undecorated) (override-redirect) (font . "-1ASC-Liberation Mono-normal-normal-normal-*-13-*-*-*-m-0-iso10646-1") (font-parameter) (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "white") (background-color . "black") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 10) (right-fringe . 10) (no-special-glyphs) (scroll-bar-foreground . "dark turquoise") (scroll-bar-background . "gray20") (menu-bar-lines . 0) (tab-bar-lines . 0) (height . 72) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 16) (scroll-bar-height . 16) (alpha) (no-focus-on-map) (no-accept-focus) (fullscreen . fullboth) (visibility . t) (skip-taskbar) (z-group) (display-type . color) (background-mode . dark) (cursor-color . "white") (sticky) (environment) (last-focus-update) (fullscreen-restore) (frameset--id . "E5D7-798A-DB41-56D3") (frameset--mini t . t) (modeline . t) (unsplittable) (icon-name) (display . ":1.0") (explicit-name) (tabs (current-tab (name . "*vterm*") (explicit-name))) (width . 237) (left . 0) (top . 0)) ((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 60) (min-pixel-width . 80) (min-pixel-height-ignore . 30) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 15) (min-pixel-width-safe . 16)) leaf (pixel-width . 1920) (pixel-height . 1065) (total-width . 240) (total-height . 71) (normal-height . 1.0) (normal-width . 1.0) (buffer "Block.hs" (selected . t) (hscroll . 0) (fringes 10 10 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 3508) (start . 3117)) (prev-buffers ("Block.hs" 3117 3508) ("ca" 1 1))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring nil)
(setq regexp-search-ring '(#("hl" 0 2 (isearch-case-fold-search t)) #("gl" 0 2 (isearch-case-fold-search t)) #("line" 0 4 (isearch-case-fold-search t)) #("mode-line" 0 9 (isearch-case-fold-search t)) #("naysa" 0 5 (isearch-case-fold-search t)) #("focus" 0 5 (isearch-case-fold-search t)) #("background" 0 10 (isearch-case-fold-search t)) #("naysater" 0 8 (isearch-case-fold-search t)) #("codelab" 0 7 (isearch-case-fold-search t)) #("\\<codelab\\>" 0 11 (isearch-case-fold-search nil)) #("remap" 0 5 (isearch-case-fold-search nil)) #("kbd" 0 3 (isearch-case-fold-search t)) #("haskell-" 0 8 (isearch-case-fold-search t))))
(setq register-alist (list (list 97 "Unprintable entity" (let ((mk (make-marker))) (add-hook 'desktop-delay-hook (lambda nil (set-marker mk nil (get-buffer " *temp*")))) mk)) (list 106 "Unprintable entity" (let ((mk (make-marker))) (add-hook 'desktop-delay-hook (lambda nil (set-marker mk nil (get-buffer " *temp*")))) mk)) '(48 . #("(global-set-key (kbd \"<f5>\") '(setq my-window-list (current-frame-configuration)))\n" 0 17 (fontified t yank-handler (evil-yank-line-handler nil t)) 17 21 (fontified t yank-handler (evil-yank-line-handler nil t)) 21 27 (face font-lock-string-face fontified t yank-handler (evil-yank-line-handler nil t)) 27 30 (fontified t yank-handler (evil-yank-line-handler nil t)) 30 31 (fontified t yank-handler (evil-yank-line-handler nil t)) 31 35 (face font-lock-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 35 80 (fontified t yank-handler (evil-yank-line-handler nil t)) 80 81 (rear-nonsticky t fontified t yank-handler (evil-yank-line-handler nil t)) 81 82 (fontified t yank-handler (evil-yank-line-handler nil t)) 82 83 (fontified t yank-handler (evil-yank-line-handler nil t))))))
(setq file-name-history '("/home/darchitect/work/cardano-node/cardano-api/src/Cardano/Api/Block.hs" "/home/darchitect/.emacs" "~/.emacs.d/"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/home/darchitect/work/cardano-node/cardano-api/src/Cardano/Api/Block.hs"
  "Block.hs"
  'haskell-mode
  '(eldoc-mode override-global-mode undo-tree-mode auto-revert-mode auto-complete-mode highlight-numbers-mode hindent-mode)
  3508
  '(321 nil)
  nil
  nil
  '((tab-width . 8) (indent-tabs-mode) (buffer-display-time 24999 11231 967768 546000) (buffer-file-coding-system . undecided-unix) (overwrite-mode))
  '((mark-ring (3048))))

(desktop-create-buffer 208
  "/home/darchitect/.emacs"
  ".emacs"
  'emacs-lisp-mode
  '(eldoc-mode override-global-mode undo-tree-mode auto-complete-mode highlight-numbers-mode)
  427
  '(1369 nil)
  nil
  nil
  '((buffer-display-time 24999 11231 967770 405000) (buffer-file-coding-system . undecided-unix) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/home/darchitect/ca"
  "ca"
  'fundamental-mode
  '(override-global-mode undo-tree-mode)
  1
  '(1 nil)
  nil
  nil
  '((buffer-display-time 24999 10353 40852 65000) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  "/home/darchitect/.bashrc"
  ".bashrc"
  'sh-mode
  '(override-global-mode undo-tree-mode auto-complete-mode highlight-numbers-mode)
  395
  '(395 nil)
  nil
  nil
  '((buffer-display-time 24999 9898 731056 931000) (buffer-file-coding-system . undecided-unix) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "codelab"
  'dired-mode
  '(override-global-mode)
  493
  '(nil nil)
  t
  '("/home/darchitect/work/haskell-trainings/haskell_102/codelab/")
  '((buffer-display-time 24999 8169 973232 313000) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "haskell_102"
  'dired-mode
  '(override-global-mode)
  275
  '(nil nil)
  t
  '("/home/darchitect/work/haskell-trainings/haskell_102/")
  '((buffer-display-time 24999 8169 250684 34000) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "haskell-trainings"
  'dired-mode
  '(override-global-mode)
  531
  '(nil nil)
  t
  '("/home/darchitect/work/haskell-trainings/")
  '((buffer-display-time 24999 8168 341368 899000) (overwrite-mode))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "work"
  'dired-mode
  '(override-global-mode)
  468
  '(nil nil)
  t
  '("/home/darchitect/work/")
  '((buffer-display-time 24999 10271 795891 799000) (overwrite-mode))
  '((mark-ring nil)))

